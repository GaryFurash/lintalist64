BundleFormat: 1
Name: PeopleSoft
Description: PeopleSoft
Author: Gary Furash
TitleMatch: 
Patterns:
- LLPart1: /******************************************************************************
 *
 *****************************************************************************/
  LLPart2: peoplecode - java block comment
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: /**
 * << description >>
 *
 * @param
 * @return
 * @exception none
 */
method [[Input=Method_Name]]
  throw create DDC_UTILITY:EXCEPTION:NotImplementedException("[[Input=Method_Name]]", "ClassName")
end-method;
  LLPart2: peoplecode - method
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: COALESCE(( SELECT XL.FIELDVALUE + ': ' + XL.XLATLONGNAME FROM PSXLATITEM XL
         WHERE XL.FIELDNAME  = '[[Input=FieldName]]'
           AND XL.FIELDVALUE = [[Input=SourceAlias]].[[Input=FieldName]]
           AND XL.EFFDT      = (
                    SELECT MAX(XL_ED.EFFDT)
                    FROM PSXLATITEM XL_ED
                    WHERE XL_ED.FIELDNAME  = XL.FIELDNAME
                      AND XL_ED.FIELDVALUE = XL.FIELDVALUE
                      AND XL_ED.EFFDT      <= GETDATE()
               ) ), 'None') AS [[Input=FieldName]]
  LLPart2: peoplesoft sql - get translate value
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: [[DateTime=MM/dd/yyyy]] gffurash [[INPUT=Request ID]] - [[INPUT=Comment]]
  LLPart2: peoplecode - history comment
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: WriteToLog(%ApplicationLogFence_Error, &Err.ToString());
  LLPart2: peoplecode - writetolog
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: import TTS_UNITTEST:TestBase;
import [[Input=PackagePath]]:[[Input=ClassUnderTest]];

class [[Input=ClassUnderTest]]Test extends TTS_UNITTEST:TestBase
   method [[Input=ClassUnderTest]]Test();
   method Run();
   method SetUp();
   method TearDown();
private
   method TestMethod1();
   method Obverse(&InValue As boolean) Returns boolean;
end-class;

/*****************************************************************************
 * Constructor
 *****************************************************************************/

method [[Input=ClassUnderTest]]Test
   %Super = create TTS_UNITTEST:TestBase("[[Input=ClassUnderTest]]Test");
end-method;

/*****************************************************************************
 * Framework Implementation
 *****************************************************************************/
method Run
   /+ Extends/implements TTS_UNITTEST:TestBase.Run +/
   %This.TestMethod1();
end-method;

method SetUp
   /+ Extends/implements TTS_UNITTEST:TestBase.Setup +/
end-method;

method TearDown
   /+ Extends/implements TTS_UNITTEST:TestBase.Teardown +/
end-method;

/*****************************************************************************
 * Tests
 *****************************************************************************/

/*---------------------------------------------------------------------------*/
method TestMethod1
   /* Arrange, Act, Assert */
end-method;

/*****************************************************************************
 * Utility Methods
 *****************************************************************************/

method Obverse
   /+ &InValue as Boolean +/
   /+ Returns Boolean +/
   If &InValue = True Then
      Return False;
   Else
      Return True;
   End-If;
end-method;
  LLPart2: peoplecode - unit test template
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: REM import DDC_UTILITY:EXCEPTION:IllegalArgumentException;
REM import DDC_UTILITY:EXCEPTION:NotImplementedException;

/**
 *
 *
 * Usage:
 *
 * Modification History
 * --------------------
 * [[DateTime=MM/dd/yyyy]] gffurash [[INPUT=Request ID]] - created
 */
class [[Input=classname]]
   method [[Input=classname]](); /* Constructor */
   method Clone() returns [[Input=classname]];
   method Equals(&compareTo_ as [[Input=classname]]) returns boolean;
   method ToString() Returns string;
end-class;

/*****************************************************************************
 * DECLARATIONS (GLOBAL/COMPONENT VARIABLES, FUNCTIONS)
 *****************************************************************************/

/*****************************************************************************
 * CONSTRUCTOR
 *****************************************************************************/

/**
 * @param
 * @exception
 */
method [[Input=classname]]

end-method;

/*****************************************************************************
 * METHODS
 *****************************************************************************/

/**
 * Is this object equal to the passed object
 *
 * @param &compareTo_ object to compare 
 * @return True if equals
 * @exception none
 */
method Equals
   return false;
end-method;

/**
 * Return a string value (identifier) for this object
 *
 * @return string representation
 * @exception none
 */
method ToString
   Return "";
end-method;

/*****************************************************************************
 * PROPERTIES (GET)
 *****************************************************************************/

/*****************************************************************************
 * PROPERTIES (SET)
 *****************************************************************************/
  LLPart2: peoplecode - class template
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: -TRACE 7 -TOOLSTRACE 143 -TOOLSTRACEPC 4044 -TOOLSTRACESQL 31
  LLPart2: peoplesoft - trace application engine process
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: import PT_RCF:ServiceInterface;

class ChangeClassNameToEventName extends PT_RCF:ServiceInterface
   method execute();
end-class;

method execute
   /+ Extends/implements PT_RCF:ServiceInterface.execute +/

   REM ** Code goes here;
end-method;
  LLPart2: peoplecode - event mapping for component
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: import PS_PT:Integration:IRequestHandler;

class GetEmployeesHandler implements PS_PT:Integration:IRequestHandler
   method OnRequest(&request As Message) Returns Message;

end-class;


method OnRequest
   /+ &request as Message +/
   /+ Returns Message +/
   /+ Extends/implements PS_PT:Integration:IRequestHandler.OnRequest +/
   REM ** TODO: Update operation name;
   Local Message &response = CreateMessage(Operation.<OPERATION_NAME>, %IntBroker_Response);

   REM ** TODO: Implementation Code Goes here;

   Return &response;
end-method;
  LLPart2: peoplecode - integration broker request handler
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: class [[Input=exception]]Exception extends Exception
   method CUDActionFailureException(&message as string);
end-class;

method [[Input=exception]]Exception
   %Super = CreateException(10000, 1, "message not found", &message);
end-method;
  LLPart2: peoplecode - exception class
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: SELECT *
FROM PS_JOB JB
WHERE JB.EFFDT = (
    SELECT MAX(JB_ED.EFFDT)
    FROM PS_JOB JB_ED
    WHERE JB_ED.EMPLID   = JB.EMPLID
      AND JB_ED.EMPL_RCD = JB.EMPL_RCD
      AND JB_ED.EFFDT   <= GETDATE()
  )
  AND JB.EFFSEQ = (
    SELECT MAX(JB_ES.EFFSEQ)
    FROM PS_JOB JB_ES
    WHERE JB_ES.EMPLID   = JB.EMPLID
      AND JB_ES.EMPL_RCD = JB.EMPL_RCD
      AND JB_ES.EFFDT    = JB.EFFDT)
  AND JB.HR_STATUS     = 'A'
  AND JB.JOB_INDICATOR = 'P'
  LLPart2: peoplesoft sql - get current effective dated job
  LLKey: 
  LLShorthand: 
  LLScript: 
- LLPart1: SELECT *
SELECT *
FROM PS_PAY_CALENDAR CA
  JOIN PS_PAY_PAGE PP
    ON PP.COMPANY    = CA.COMPANY
   AND PP.PAYGROUP   = CA.PAYGROUP
   AND PP.PAY_END_DT = CA.PAY_END_DT
  AND PP.PAY_OFF_CYCLE = CA.PAY_OFF_CYCLE
  JOIN PS_PAY_LINE PL
    ON PL.COMPANY    = PL.COMPANY
   AND PL.PAYGROUP   = PL.PAYGROUP
   AND PL.PAY_END_DT = PL.PAY_END_DT
  AND PL.PAY_OFF_CYCLE = PL.PAY_OFF_CYCLE
  AND PL.PAGE_NUM = PL.PAGE_NUM
  JOIN PS_PAY_CHECK CK
    ON CK.COMPANY	    = PL.COMPANY
   AND CK.PAYGROUP	    = PL.PAYGROUP
   AND CK.PAY_END_DT	= PL.PAY_END_DT
   AND CK.OFF_CYCLE	    = PL.OFF_CYCLE
   AND CK.PAGE_NUM	    = PL.PAGE_NUM
   AND CK.LINE_NUM  	= PL.LINE_NUM
  JOIN PS_PAY_EARNINGS ER
    ON ER.COMPANY	    = CK.COMPANY
   AND ER.PAYGROUP	    = CK.PAYGROUP
   AND ER.PAY_END_DT	= CK.PAY_END_DT
   AND ER.OFF_CYCLE	    = CK.OFF_CYCLE
   AND ER.PAGE_NUM	    = CK.PAGE_NUM
   AND ER.LINE_NUM  	= CK.LINE_NUM
  LEFT JOIN PS_PAY_OTH_EARNS OE
    ON OE.COMPANY	    = ER.COMPANY
   AND OE.PAYGROUP	    = ER.PAYGROUP
   AND OE.PAY_END_DT	= ER.PAY_END_DT
   AND OE.OFF_CYCLE	    = ER.OFF_CYCLE
   AND OE.PAGE_NUM	    = ER.PAGE_NUM
   AND OE.LINE_NUM  	= ER.LINE_NUM
   AND OE.ADDL_NBR  	= ER.ADDL_NBR
  LLPart2: peoplesoft sql - get pay check
  LLKey: 
  LLShorthand: 
  LLScript: 
